/*------------------------------------*\
=grid
\*------------------------------------*/

/**
 *
 * gutter between grid units
 * - has to be a fixed value like rem, em or px
 *
 */

$grid-gutter:2.5em!default;


/**
 *
 * type of classes to use: silent classes or not
 *
 */

$silent-classes:false!default;
$class-type:unquote(".");

@if ($silent-classes == true)
{
	$class-type:unquote("%");
}


/**
 *
 * use pull and pull classes
 *
 */

$use-pushclasses:false!default;
$use-pullclasses:false!default;

/**
 *
 * Default list for media queries in grid
 *
 * Usage
 * - used by media queries mixin
 * - used to namespace grids
 *
 * Nested Lists
 * - first param: keyword, also used to namespace grid classes
 * - second param: media query parameters (all media queries are screen based)
 * - Third param: is the query used for grids or not
 *
 * Dimensions
 * - small: 	600px	37.5em
 * - medium: 	760px	47.5em
 * - large: 	1024px	64em
 * - xlarge: 	1140px	71.25em
 */

$mq-list:		"small"      		"(min-width:37.5em)"       true,
            "medium"     		"(min-width:46.875em)"     true,
            "large"      		"(min-width:64em)"         true,
            "xlarge"     		"(min-width:71.25em)"      true!default;


/**
 *
 * [1] can be used on lists
 * [2] negative margin left cancels padding for outermost left grid units
 *
 */

#{$class-type}grid
{
	list-style:none;	// [1]
	margin:0; 				// [1]
	padding:0;				// [1]
	display:block;
	margin-left:($grid-gutter * -1); // [2]
}


	/**
	 *
	 * grid aligned center
	 *
	 */

	#{$class-type}grid--center
	{
		text-align:center;

		& > #{$class-type}grid__unit
		{
			text-align:left;
		}
	}


	/**
	 *
	 * grid aligned right
	 *
	 */

	#{$class-type}grid--right
	{
		text-align:right;

		& > #{$class-type}grid__unit
		{
			text-align:left;
		}
	}


	/**
	 *
	 * grid bottom-margins
	 *
	 */

	 #{$class-type}grid--spaced
	{

		& > #{$class-type}grid__unit
		{
			margin-bottom:$grid-gutter;
		}
	}

	/**
	 *
	 * grid gutterless
	 *
	 */

	 #{$class-type}grid--gutterless
	{
		margin-left:0;

		& > #{$class-type}grid__unit
		{
			padding-left:0;
		}
	}



/**
 *
 * grid items defined using inline-block
 * - more flexible than float
 * - we use border-box to define padding inside boxes
 *
 */

#{$class-type}grid__unit
{
	margin:0;
	padding:0;
	display:inline-block;
	vertical-align:top;
	box-sizing:border-box;
	width:100%;
	padding-left:$grid-gutter;
}

/**
 *
 * mixin to create our grid classes in all media queries
 * - classes are namespaced using breakpoints defined in mq-list
 *
 */

@mixin make-grid($namespace:"")
{
	#{$class-type}#{$namespace}span-full { width:100%; }

	#{$class-type}#{$namespace}span-1of2 { width:1/2 * 100%; }

	#{$class-type}#{$namespace}span-1of3 { width:1/3 * 100%; }
	#{$class-type}#{$namespace}span-2of3 { width:2/3 * 100%; }

	#{$class-type}#{$namespace}span-1of4 { width:1/4 * 100%; }
	#{$class-type}#{$namespace}span-2of4 { @extend #{$class-type}#{$namespace}span-1of2; }
	#{$class-type}#{$namespace}span-3of4 { width:3/4 * 100%; }

	#{$class-type}#{$namespace}span-1of5 { width:1/5 * 100%; }
	#{$class-type}#{$namespace}span-2of5 { width:2/5 * 100%; }
	#{$class-type}#{$namespace}span-3of5 { width:3/5 * 100%; }
	#{$class-type}#{$namespace}span-4of5 { width:4/5 * 100%; }

	#{$class-type}#{$namespace}span-1of6 { width:1/6 * 100%; }
	#{$class-type}#{$namespace}span-2of6 { @extend #{$class-type}#{$namespace}span-1of3; }
	#{$class-type}#{$namespace}span-3of6 { @extend #{$class-type}#{$namespace}span-1of2; }
	#{$class-type}#{$namespace}span-4of6 { @extend #{$class-type}#{$namespace}span-2of3; }
	#{$class-type}#{$namespace}span-5of6 { width:5/6 * 100%; }

	#{$class-type}#{$namespace}span-1of8 { width:1/8 * 100%; }
	#{$class-type}#{$namespace}span-2of8 { @extend #{$class-type}#{$namespace}span-1of4; }
	#{$class-type}#{$namespace}span-3of8 { width:3/8 * 100%; }
	#{$class-type}#{$namespace}span-4of8 { @extend #{$class-type}#{$namespace}span-1of2; }
	#{$class-type}#{$namespace}span-5of8 { width:5/8 * 100%; }
	#{$class-type}#{$namespace}span-6of8 { @extend #{$class-type}#{$namespace}span-3of4; }
	#{$class-type}#{$namespace}span-7of8 { width:7/8 * 100%; }

	#{$class-type}#{$namespace}span-1of10 { width:1/10 * 100%; }
	#{$class-type}#{$namespace}span-2of10 { @extend #{$class-type}#{$namespace}span-1of5; }
	#{$class-type}#{$namespace}span-3of10 { width:3/10 * 100%; }
	#{$class-type}#{$namespace}span-4of10 { @extend #{$class-type}#{$namespace}span-2of5; }
	#{$class-type}#{$namespace}span-5of10 { @extend #{$class-type}#{$namespace}span-1of2; }
	#{$class-type}#{$namespace}span-6of10 { @extend #{$class-type}#{$namespace}span-3of5; }
	#{$class-type}#{$namespace}span-7of10 { width:7/10 * 100%; }
	#{$class-type}#{$namespace}span-8of10 { @extend #{$class-type}#{$namespace}span-4of5; }
	#{$class-type}#{$namespace}span-9of10 { width:9/10 * 100%; }

	#{$class-type}#{$namespace}span-1of12 { width:1/12 * 100%; }
	#{$class-type}#{$namespace}span-2of12 { @extend #{$class-type}#{$namespace}span-1of6; }
	#{$class-type}#{$namespace}span-3of12 { @extend #{$class-type}#{$namespace}span-1of4; }
	#{$class-type}#{$namespace}span-4of12 { @extend #{$class-type}#{$namespace}span-1of3; }
	#{$class-type}#{$namespace}span-5of12 { width:5/12 * 100%; }
	#{$class-type}#{$namespace}span-6of12 { @extend #{$class-type}#{$namespace}span-1of2; }
	#{$class-type}#{$namespace}span-7of12 { width:7/12 * 100%; }
	#{$class-type}#{$namespace}span-8of12 { @extend #{$class-type}#{$namespace}span-2of3; }
	#{$class-type}#{$namespace}span-9of12 { @extend #{$class-type}#{$namespace}span-3of4; }
	#{$class-type}#{$namespace}span-10of12 { @extend #{$class-type}#{$namespace}span-5of6; }
	#{$class-type}#{$namespace}span-11of12 { width:11/12 * 100%; }
}

/**
 *
 * mixin to create our push classes in all media queries
 * - classes are namespaced using breakpoints defined in mq-list
 *
 */

@mixin pushclasses($namespace:"")
{
	#{$class-type}#{$namespace}push-full { position:relative; left:100%; }

	#{$class-type}#{$namespace}push-1of2 { position:relative; left:1/2 * 100%; }

	#{$class-type}#{$namespace}push-1of3 { position:relative; left:1/3 * 100%; }
	#{$class-type}#{$namespace}push-2of3 { position:relative; left:2/3 * 100%; }

	#{$class-type}#{$namespace}push-1of4 { position:relative; left:1/4 * 100%; }
	#{$class-type}#{$namespace}push-2of4 { position:relative; @extend #{$class-type}#{$namespace}push-1of2; }
	#{$class-type}#{$namespace}push-3of4 { position:relative; left:3/4 * 100%; }

	#{$class-type}#{$namespace}push-1of5 { position:relative; left:1/5 * 100%; }
	#{$class-type}#{$namespace}push-2of5 { position:relative; left:2/5 * 100%; }
	#{$class-type}#{$namespace}push-3of5 { position:relative; left:3/5 * 100%; }
	#{$class-type}#{$namespace}push-4of5 { position:relative; left:4/5 * 100%; }

	#{$class-type}#{$namespace}push-1of6 { position:relative; left:1/6 * 100%; }
	#{$class-type}#{$namespace}push-2of6 { position:relative; @extend #{$class-type}#{$namespace}push-1of3; }
	#{$class-type}#{$namespace}push-3of6 { position:relative; @extend #{$class-type}#{$namespace}push-1of2; }
	#{$class-type}#{$namespace}push-4of6 { position:relative; @extend #{$class-type}#{$namespace}push-2of3; }
	#{$class-type}#{$namespace}push-5of6 { position:relative; left:5/6 * 100%; }

	#{$class-type}#{$namespace}push-1of8 { position:relative; left:1/8 * 100%; }
	#{$class-type}#{$namespace}push-2of8 { position:relative; @extend #{$class-type}#{$namespace}push-1of4; }
	#{$class-type}#{$namespace}push-3of8 { position:relative; left:3/8 * 100%; }
	#{$class-type}#{$namespace}push-4of8 { position:relative; @extend #{$class-type}#{$namespace}push-1of2; }
	#{$class-type}#{$namespace}push-5of8 { position:relative; left:5/8 * 100%; }
	#{$class-type}#{$namespace}push-6of8 { position:relative; @extend #{$class-type}#{$namespace}push-3of4; }
	#{$class-type}#{$namespace}push-7of8 { position:relative; left:7/8 * 100%; }

	#{$class-type}#{$namespace}push-1of10 { position:relative; left:1/10 * 100%; }
	#{$class-type}#{$namespace}push-2of10 { position:relative; @extend #{$class-type}#{$namespace}push-1of5; }
	#{$class-type}#{$namespace}push-3of10 { position:relative; left:3/10 * 100%; }
	#{$class-type}#{$namespace}push-4of10 { position:relative; @extend #{$class-type}#{$namespace}push-2of5; }
	#{$class-type}#{$namespace}push-5of10 { position:relative; @extend #{$class-type}#{$namespace}push-1of2; }
	#{$class-type}#{$namespace}push-6of10 { position:relative; @extend #{$class-type}#{$namespace}push-3of5; }
	#{$class-type}#{$namespace}push-7of10 { position:relative; left:7/10 * 100%; }
	#{$class-type}#{$namespace}push-8of10 { position:relative; @extend #{$class-type}#{$namespace}push-4of5; }
	#{$class-type}#{$namespace}push-9of10 { position:relative; left:9/10 * 100%; }

	#{$class-type}#{$namespace}push-1of12 { position:relative; left:1/12 * 100%; }
	#{$class-type}#{$namespace}push-2of12 { position:relative; @extend #{$class-type}#{$namespace}push-1of6; }
	#{$class-type}#{$namespace}push-3of12 { position:relative; @extend #{$class-type}#{$namespace}push-1of4; }
	#{$class-type}#{$namespace}push-4of12 { position:relative; @extend #{$class-type}#{$namespace}push-1of3; }
	#{$class-type}#{$namespace}push-5of12 { position:relative; left:5/12 * 100%; }
	#{$class-type}#{$namespace}push-6of12 { position:relative; @extend #{$class-type}#{$namespace}push-1of2; }
	#{$class-type}#{$namespace}push-7of12 { position:relative; left:7/12 * 100%; }
	#{$class-type}#{$namespace}push-8of12 { position:relative; @extend #{$class-type}#{$namespace}push-2of3; }
	#{$class-type}#{$namespace}push-9of12 { position:relative; @extend #{$class-type}#{$namespace}push-3of4; }
	#{$class-type}#{$namespace}push-10of12 { position:relative; @extend #{$class-type}#{$namespace}push-5of6; }
	#{$class-type}#{$namespace}push-11of12 { position:relative; left:11/12 * 100%; }
}

/**
 *
 * mixin to create our push classes in all media queries
 * - classes are namespaced using breakpoints defined in mq-list
 *
 */

@mixin pullclasses($namespace:"")
{
	#{$class-type}#{$namespace}pull-full { position:relative; right:100%; }

	#{$class-type}#{$namespace}pull-1of2 { position:relative; right:1/2 * 100%; }

	#{$class-type}#{$namespace}pull-1of3 { position:relative; right:1/3 * 100%; }
	#{$class-type}#{$namespace}pull-2of3 { position:relative; right:2/3 * 100%; }

	#{$class-type}#{$namespace}pull-1of4 { position:relative; right:1/4 * 100%; }
	#{$class-type}#{$namespace}pull-2of4 { position:relative; @extend #{$class-type}#{$namespace}pull-1of2; }
	#{$class-type}#{$namespace}pull-3of4 { position:relative; right:3/4 * 100%; }

	#{$class-type}#{$namespace}pull-1of5 { position:relative; right:1/5 * 100%; }
	#{$class-type}#{$namespace}pull-2of5 { position:relative; right:2/5 * 100%; }
	#{$class-type}#{$namespace}pull-3of5 { position:relative; right:3/5 * 100%; }
	#{$class-type}#{$namespace}pull-4of5 { position:relative; right:4/5 * 100%; }

	#{$class-type}#{$namespace}pull-1of6 { position:relative; right:1/6 * 100%; }
	#{$class-type}#{$namespace}pull-2of6 { position:relative; @extend #{$class-type}#{$namespace}pull-1of3; }
	#{$class-type}#{$namespace}pull-3of6 { position:relative; @extend #{$class-type}#{$namespace}pull-1of2; }
	#{$class-type}#{$namespace}pull-4of6 { position:relative; @extend #{$class-type}#{$namespace}pull-2of3; }
	#{$class-type}#{$namespace}pull-5of6 { position:relative; right:5/6 * 100%; }

	#{$class-type}#{$namespace}pull-1of8 { position:relative; right:1/8 * 100%; }
	#{$class-type}#{$namespace}pull-2of8 { position:relative; @extend #{$class-type}#{$namespace}pull-1of4; }
	#{$class-type}#{$namespace}pull-3of8 { position:relative; right:3/8 * 100%; }
	#{$class-type}#{$namespace}pull-4of8 { position:relative; @extend #{$class-type}#{$namespace}pull-1of2; }
	#{$class-type}#{$namespace}pull-5of8 { position:relative; right:5/8 * 100%; }
	#{$class-type}#{$namespace}pull-6of8 { position:relative; @extend #{$class-type}#{$namespace}pull-3of4; }
	#{$class-type}#{$namespace}pull-7of8 { position:relative; right:7/8 * 100%; }

	#{$class-type}#{$namespace}pull-1of10 { position:relative; right:1/10 * 100%; }
	#{$class-type}#{$namespace}pull-2of10 { position:relative; @extend #{$class-type}#{$namespace}pull-1of5; }
	#{$class-type}#{$namespace}pull-3of10 { position:relative; right:3/10 * 100%; }
	#{$class-type}#{$namespace}pull-4of10 { position:relative; @extend #{$class-type}#{$namespace}pull-2of5; }
	#{$class-type}#{$namespace}pull-5of10 { position:relative; @extend #{$class-type}#{$namespace}pull-1of2; }
	#{$class-type}#{$namespace}pull-6of10 { position:relative; @extend #{$class-type}#{$namespace}pull-3of5; }
	#{$class-type}#{$namespace}pull-7of10 { position:relative; right:7/10 * 100%; }
	#{$class-type}#{$namespace}pull-8of10 { position:relative; @extend #{$class-type}#{$namespace}pull-4of5; }
	#{$class-type}#{$namespace}pull-9of10 { position:relative; right:9/10 * 100%; }

	#{$class-type}#{$namespace}pull-1of12 { position:relative; right:1/12 * 100%; }
	#{$class-type}#{$namespace}pull-2of12 { position:relative; @extend #{$class-type}#{$namespace}pull-1of6; }
	#{$class-type}#{$namespace}pull-3of12 { position:relative; @extend #{$class-type}#{$namespace}pull-1of4; }
	#{$class-type}#{$namespace}pull-4of12 { position:relative; @extend #{$class-type}#{$namespace}pull-1of3; }
	#{$class-type}#{$namespace}pull-5of12 { position:relative; right:5/12 * 100%; }
	#{$class-type}#{$namespace}pull-6of12 { position:relative; @extend #{$class-type}#{$namespace}pull-1of2; }
	#{$class-type}#{$namespace}pull-7of12 { position:relative; right:7/12 * 100%; }
	#{$class-type}#{$namespace}pull-8of12 { position:relative; @extend #{$class-type}#{$namespace}pull-2of3; }
	#{$class-type}#{$namespace}pull-9of12 { position:relative; @extend #{$class-type}#{$namespace}pull-3of4; }
	#{$class-type}#{$namespace}pull-10of12 { position:relative; @extend #{$class-type}#{$namespace}pull-5of6; }
	#{$class-type}#{$namespace}pull-11of12 { position:relative; right:11/12 * 100%; }
}

/**
 *
 * create non namespaced grid / push / pull classes
 *
 */

@include make-grid();
@if ($use-pushclasses == true)
{
	@include pushclasses();
}
@if ($use-pullclasses == true)
{
	@include pullclasses();
}

/**
 *
 * create namespaced grid classes
 * - using media queries defined in variables.scss
 *
 */

@each $breakpoint in $mq-list
{
	$breakpoint-name: 	nth($breakpoint, 1);
	$breakpoint-param: 	nth($breakpoint, 2);
	$breakpoint-grid: 	nth($breakpoint, 3);

	@if ($breakpoint-grid == true)
	{
		@media only screen and #{$breakpoint-param}
		{
			@include make-grid("#{$breakpoint-name}-");
			@if ($use-pushclasses == true)
			{
				@include pushclasses("#{$breakpoint-name}-");
			}
			@if ($use-pullclasses == true)
			{
				@include pullclasses("#{$breakpoint-name}-");
			}
		}
	}
}